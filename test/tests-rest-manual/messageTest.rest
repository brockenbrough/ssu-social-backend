### 1. Should fail: missing chatRoomId parameter  
GET http://localhost:8095/message/getByChatRoomId/  
Content-Type: application/json  

###  

### 2. Should fail: chatRoomId does not exist  
GET http://localhost:8095/message/getByChatRoomId/000000000000000000000000  
Content-Type: application/json  

###  

### 3. Should pass: valid chatRoomId with no messages found  
GET http://localhost:8095/message/getByChatRoomId/6717d4db59a430970689a1c2 
Content-Type: application/json  

###  

### 4. Should pass: valid chatRoomId with messages found  
GET http://localhost:8095/message/getByChatRoomId/6717d4db59a430970689a1c2  
Content-Type: application/json  

### 5. Should fail: invalid chatRoomId format  
GET http://localhost:8095/message/getByChatRoomId/invalidChatRoomIdFormat  
Content-Type: application/json  

### 6. Should pass: create a message with valid chatRoomId, senderId, receiverId, and text
POST http://localhost:8095/message/ 
Content-Type: application/json

{ 
  "chatRoomId": "6717d4db59a430970689a1c2",
  "senderId": "65debffb7e8758b2ded0ebef", 
  "receiverId": "67083d66a09ca5fbc4f1fe6c", 
  "text": "Hello, this is a test message.", 
  "isRead": false 
}

### 7. Should fail: missing required fields (chatRoomId, senderId, receiverId, text)
POST http://localhost:8095/message/ 
Content-Type: application/json

{}

### 8. Should fail: missing text field
POST http://localhost:8095/message/ 
Content-Type: application/json

{ "chatRoomId": "6717d4db59a430970689a1c2", "senderId": "65debffb7e8758b2ded0ebef", "receiverId": "67083d66a09ca5fbc4f1fe6c" }

### 9. Should fail: empty text field
POST http://localhost:8095/message/ 
Content-Type: application/json

{ "chatRoomId": "6717d4db59a430970689a1c2", "senderId": "65debffb7e8758b2ded0ebef", "receiverId": "67083d66a09ca5fbc4f1fe6c", "text": "" }

### 10. Should fail: chatRoomId does not exist
POST http://localhost:8095/message/ 
Content-Type: application/json

{ "chatRoomId": "000000000000000000000000", "senderId": "65debffb7e8758b2ded0ebef", "receiverId": "67083d66a09ca5fbc4f1fe6c", "text": "Testing non-existent chat room." }

### 11. Should fail: senderId does not exist
POST http://localhost:8095/message/ 
Content-Type: application/json

{ "chatRoomId": "6717d4db59a430970689a1c2", "senderId": "000000000000000000000000", "receiverId": "67083d66a09ca5fbc4f1fe6c", "text": "Testing non-existent sender." }

### 12. Should fail: receiverId does not exist
POST http://localhost:8095/message/ 
Content-Type: application/json

{ "chatRoomId": "6717d4db59a430970689a1c2", "senderId": "65debffb7e8758b2ded0ebef", "receiverId": "000000000000000000000000", "text": "Testing non-existent receiver." }

### 13. Should pass: create a message with isRead set to true
POST http://localhost:8095/message/ 
Content-Type: application/json

{ "chatRoomId": "6717d4db59a430970689a1c2", "senderId": "65debffb7e8758b2ded0ebef", "receiverId": "67083d66a09ca5fbc4f1fe6c", "text": "This message is read.", "isRead": true }

### 14. Should pass: create a message with isRead omitted (default behavior)
POST http://localhost:8095/message/ 
Content-Type: application/json

{ "chatRoomId": "6717d4db59a430970689a1c2", "senderId": "65debffb7e8758b2ded0ebef", "receiverId": "67083d66a09ca5fbc4f1fe6c", "text": "Message with isRead omitted." }

### 15. Should pass: Fetch unread messages with a valid userId
GET http://localhost:8095/message/unreadMessage/getByUserId/65debffb7e8758b2ded0ebef
Content-Type: application/json

###

### 16. Should fail: Fetch unread messages with an invalid userId (not found)
GET http://localhost:8095/message/unreadMessage/getByUserId/invalidUserId
Content-Type: application/json

###

### 17. Should fail: Missing userId in the request
GET http://localhost:8095/message/unreadMessage/getByUserId/
Content-Type: application/json

###

### 18. Should fail: Invalid userId format (malformed ID)
GET http://localhost:8095/message/unreadMessage/getByUserId/12345
Content-Type: application/json

